<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Signup</title>






<!-- Font Awesome -->
<link
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
  rel="stylesheet"
/>
<!-- Google Fonts -->
<link
  href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
  rel="stylesheet"
/>
<!-- MDB -->
<link
  href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.4.2/mdb.min.css"
  rel="stylesheet"
/>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">


<style>
.gradient-custom {
/* fallback for old browsers */
background: #6a11cb;

/* Chrome 10-25, Safari 5.1-6 */
background: -webkit-linear-gradient(to right, rgba(106, 17, 203, 1), rgba(37, 117, 252, 1));

/* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
background: linear-gradient(to right, rgba(106, 17, 203, 1), rgba(37, 117, 252, 1))
}

.card-registration .select-input.form-control[readonly]:not([disabled]) {
font-size: 1rem;
line-height: 2.15;
padding-left: .75em;
padding-right: .75em;
}
.card-registration .select-arrow {
top: 13px;
}

</style>








</head>
<body>
    <!-- <h1>Signup</h1>
    <p><%= message %></p> -->
    <!-- Your signup form here -->

    <form method="post" action="/sign" onsubmit="return validateEmail()" id="formblock">
        <section class="vh-100 gradient-custom">

        
        <div class="container py-5 h-100">
          <div class="row justify-content-center align-items-center h-100">
            <div class="col-12 col-lg-9 col-xl-7">
              <div class="card shadow-2-strong card-registration" style="border-radius: 15px;">
                <div class="card-body p-4 p-md-5">
                  <h3 class="mb-4 pb-2 pb-md-0 mb-md-5">Registration Form</h3>
                  
      
                    <div class="row">
                      <div class="col-md-6 mb-4">
      
                        <!-- <div class="form-outline">
                          <input type="text" id="firstName" class="form-control form-control-lg" />
                          <label class="form-label" for="firstName">First Name</label>
                        </div> -->


                        <div class="form-outline mb-3">
                            <input type="text" id="firstName" class="form-control form-control-lg" pattern="^[^\s]+$"  name="firstname" required/>
                            <label class="form-label" for="firstName">First Name</label>
                        </div>

                        <div class="form-outline mb-3">
                            <input type="text" id="username" class="form-control form-control-lg" pattern="^[^\s]+$"    name="username" required/>
                            <label class="form-label" for="username">Username</label>
                        </div>
                                        <!-- <p><%= message %></p> -->

                        <span id="usernameError" style="color: red;"></span><br>

    
                      </div>
                      <div class="col-md-6 mb-4">
      
                        <div class="form-outline mb-3">
                          <input type="text" id="lastName" class="form-control form-control-lg" name="lastname" pattern="^[^\s]+$"   required/>
                          <label class="form-label" for="lastName">Last Name</label>
                        </div>


                        <div class="form-outline mb-3">
                            <input type="text" id="password" class="form-control form-control-lg" name="password" pattern="^[^\s]+$"  required/>
                            <label class="form-label" for="password">Password</label>
                        </div>
      
                      </div>
                    </div>
      
                    <div class="row">
                      <div class="col-md-6 mb-4 d-flex align-items-center">
      
                        <div class="form-outline w-100">
                            <input type="date" class="form-control form-control-lg" id="birthdayDate" placeholder="dd-mm-yyyy" name="birth" required />
                            <label for="birthdayDate" class="form-label">Birthday (dd-mm-yyyy)</label>
                          </div>
                          
                          
                      </div>
                      <div class="col-md-6 mb-4">
      
                        <h6 class="mb-2 pb-1">Gender: </h6>
      
                        <div class="form-check form-check-inline">
                          <input class="form-check-input" type="radio" name="gender" id="femaleGender"
                            value="female" />
                          <label class="form-check-label" for="femaleGender">Female</label>
                        </div>
      
                        <div class="form-check form-check-inline">
                          <input class="form-check-input" type="radio" name="gender" id="maleGender"
                            value="male" />
                          <label class="form-check-label" for="maleGender">Male</label>
                        </div>
      
                        <div class="form-check form-check-inline">
                          <input class="form-check-input" type="radio" name="gender" id="otherGender"
                            value="other" />
                          <label class="form-check-label" for="otherGender">Other</label>
                        </div>
      
                      </div>
                    </div>
      
                    <div class="row">
                      <div class="col-md-6 mb-4 pb-2">
      
                        <div class="form-outline">
                            <input type="email" id="textemailX" class="form-control form-control-lg" pattern="[a-zA-Z0-9._%+-]+@gmail\.com"  name="email" required />
                            <label class="form-label" for="textemailX">Email (e.g., example@gmail.com)</label>
                          </div>
                          

                          
      
                      </div>

                      <div class="col-md-6 mb-4 pb-2">
                        <div class="form-outline">
                            <input type="tel" id="phoneNumber" class="form-control form-control-lg" pattern="[0-9]" name="phonenumber" required />
                            <label class="form-label" for="phoneNumber">Phone Number</label>
                          </div>

                </div>


                      <div class="col-md-6 mb-3 pb-1">

                        <!-- Access the hidden input value and display it -->
                        <p id="verificationMessage"></p>


                        <div class="form-outline" id="otpField" style="display: none;">
                            <input type="text" id="otpInput" class="form-control form-control-lg" name="otp" required />
                            <label class="form-label" for="otpInput">Enter OTP</label>
                        </div>
                        
                      </div>
                    </div>
                    <p><%= message %></p>
                    <div class="row">
                      <div class="col-12">
      
                        <!-- <select class="select form-control-lg">
                          <option value="1" disabled>Choose option</option>
                          <option value="2">Subject 1</option>
                          <option value="3">Subject 2</option>
                          <option value="4">Subject 3</option>
                        </select>
                        <label class="form-label select-label">Choose option</label> -->
      
                      </div>
                    </div>
      
                    <div class="mt-4 pt-2">
                      <input class="fw-bold mb-2 text-uppercase" id="submitBtn" onclick="return validateForm()" type="submit"  value="Submit" />
                    </div>
      
                  
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </form>

    <script>
      function validateForm() {
          var firstName = document.getElementById("firstName").value;
          var username = document.getElementById("username").value;
          var lastName = document.getElementById("lastName").value;
          var password = document.getElementById("password").value;
          var birthdayDate = document.getElementById("birthdayDate").value;
          var gender = document.querySelector('input[name="gender"]:checked');
          var email = document.getElementById("textemailX").value;
          var phoneNumber = document.getElementById("phoneNumber").value;
  
          if (!firstName || !username || !lastName || !password || !birthdayDate || !gender || !email || !phoneNumber) {
              alert("Please fill in all required fields.");
              return false;
          }
  
          if (/\s/.test(firstName)) {
              alert("First Name cannot contain spaces");
              return false;
          }
  
          if (/\s/.test(lastName)) {
              alert("Last Name cannot contain spaces");
              return false;
          }
  
          if (/\s/.test(username)) {
              alert("Username cannot contain spaces");
              return false;
          }
  
          return true; // Form validation passed
      }
  
      document.getElementById('submitBtn').addEventListener('click', function (event) {
          event.preventDefault();
  
          if (validateForm()) {
              validateOTP();
          }
      });
  
      function validateOTP() {
          var email = document.getElementById('textemailX').value;
          var otpInput = document.getElementById('otpInput').value;
  
          // Make an HTTP request to the server to validate the OTP
          fetch('/validateotp', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json',
              },
              body: JSON.stringify({ otp: otpInput, email: email }),
          })
              .then(response => response.json())
              .then(data => {
                  if (data.success) {
                      document.getElementById('formblock').submit(); 
                  } else if (!data.success && email) {
                      alert('Invalid OTP. Please try again.');
                  }
              })
              .catch(error => {
                  console.error('Error validating OTP:', error);
              });
      }
  </script>
  




    <script>
        document.getElementById('textemailX').addEventListener('input', function () {
            var emailInput = this.value;
            var emailRegex = /^[a-zA-Z0-9._%+-]+@gmail.com$/;
            var otpField = document.getElementById('otpField');
            var verificationMessage = document.getElementById('verificationMessage');
            if (emailRegex.test(emailInput)) {
                otpField.style.display = 'block';
                // Display the verification message
                verificationMessage.innerText = 'OTP sent to:' + emailInput;
                // Send OTP to the entered email
                sendOTPByEmail(emailInput);
            } else {
                otpField.style.display = 'none';
                verificationMessage.innerText = ''; // Clear the verification message
            }
        });
    
        function sendOTPByEmail(email) {
            // Make an HTTP request to the server  
            fetch('/sendotp', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email: email }),
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Server response:', data);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    </script>
    
      <script>
        function validateEmail() {
          var emailInput = document.getElementById("textemailX").value;
          var emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\.com$/;
        
          if (!emailRegex.test(emailInput)) {
            alert("Please enter a valid email address with the domain '@gmail.com'.");
            return false;

          }
           else {
            return true;
          }
        }
        </script>

<!-- MDB -->
<script
  type="text/javascript"
  src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.4.2/mdb.min.js"
></script>  


<script>
    document.getElementById('username').addEventListener('input', function () {
        var username = this.value;
        var usernameError = document.getElementById('usernameError');
        var formBlock = document.getElementById('formblock');

        // Check if the username is available as the user types
        checkUsernameAvailability(username, function (isAvailable) {
            if (!isAvailable) {
                usernameError.innerText = 'Username already taken';
                // document.getElementById('submitBtn').disabled = true; // Disable the submit button
                formblock.addEventListener('submit',blockSubmit);
            } else {
                usernameError.innerText = '';
                // document.getElementById('submitBtn').disabled = false; // Disable the submit button
                formblock.removeEventListener('submit',blockSubmit);
            }
        });
    });


    function blockSubmit(event) {
        // Prevent form submission
        event.preventDefault();
    }

    function checkUsernameAvailability(username, callback) {
        // Make an AJAX request to your server to check if the username exists in MongoDB
        var xhr = new XMLHttpRequest();
        xhr.open('GET', '/checkUsernameAvailability?username=' + encodeURIComponent(username), true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
                var response = JSON.parse(xhr.responseText);
                callback(response.isAvailable);
            }
        };
        xhr.send();
    }
</script>


<!-- ... your existing HTML code ... -->

<script type="text/javascript"> 
    window.history.forward(); 
    function noBack() { 
        window.history.forward(); 
    } 
</script>

</body>
</html>