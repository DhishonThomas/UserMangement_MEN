<!-- views/admin/dashboard.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <style>

    body {
    background-color: rgb(18, 57, 45);
    }

.mainbox {
    margin: 80px;
    background-color: rgb(162, 213, 213); 
    padding: 20px; 
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.user-container {
    margin-bottom: 10px;
}

.user-link {
    font-size: 20px;
}

a.uname {
    text-decoration: none;
    font-family: sans-serif;
    color: black;
    font-weight: 600;
}

    </style>
</head>
<body>
    <div class="mainbox">
    <h1 class="mt-3">Welcome to the Admin Dashboard</h1>
    <button onclick="location.href='/adminlogout'" class="btn btn-primary mr-auto">Logout</button>


    <!-- Search box for users -->
    <form action="/admin/search-users" method="get">
        <div class="form-group mt-3">
            <label for="search">Search Users:</label>
            <div class="input-group">
                <input type="text" class="form-control" id="search" name="search" required>
                <div class="input-group-append">
                    <button class="btn btn-primary" type="submit">Search</button>
                </div>
            </div>
        </div>
    </form>
    
    <!-- Form to create a new user -->

    <div class="container mt-5 form-container">
        <h2 class="mb-4">Create a New User</h2>
    
        <form action="/admin/create-user" method="post" id="formblock">
            <div class="row mb-3">
                <div class="col">
                    <label for="firstname">First Name:</label>
                    <input type="text" class="form-control" id="firstname" name="firstname" required>
                </div>
                <div class="col">
                    <label for="lastname">Last Name:</label>
                    <input type="text" class="form-control" id="lastname" name="lastname" required>
                </div>
            </div>
    
            <div class="row mb-3">
                <div class="col">
                    <label for="username">Username:</label>
                    <input type="text" class="form-control" id="username" name="username" required>
                    
                    <span id="usernameError" style="color: red;"></span><br>
                </div>
               
                <div class="col">
                    <label for="password">Password:</label>
                    <input type="password" class="form-control" id="password" name="password" required>
                </div>
            </div>
    
            <div class="row mb-3">
                <div class="col">
                    <label for="birth">Birthday:</label>
                    <input  type="date" class="form-control" id="birth" name="birth" required>
                </div>
                <div class="col">
                    <label for="gender">Gender:</label>
                    <input type="text" class="form-control" id="gender" name="gender" required>
                </div>
            </div>
    
            <div class="row mb-3">
                <div class="col">
                    <label for="email">Email:</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                </div>
                <div class="col">
                    <label for="phonenumber">Phone Number:</label>
                    <input type="text" class="form-control" id="phonenumber" name="phonenumber" required>
                </div>
            </div>
    
            <button type="submit" class="btn btn-primary">Create User</button>
        </form>


    <!-- Display existing users -->
    <div class="mt-3">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Username</th>
                    <th scope="col">Edit</th>
                    <th scope="col">Delete</th>
                </tr>
            </thead>
            <tbody>
                <% users.forEach(user => { %>
                    <tr>
                        <!-- Display the username -->
                        <td>
                            <a href="/admin/user/<%= user._id %>" class="uname"><%= user.username %></a>
                        </td>
                        <!-- Edit and Delete buttons -->
                        <td>
                            <a class="btn btn-warning" href="/admin/edit/<%= user._id %>">Edit</a>
                        </td>
                        <td>
                            <a class="btn btn-danger" href="/admin/delete/<%= user._id %>" >Delete</a>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
    


</div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>
</body>
</html>




<script>
    // Get all elements with the class "delete"
    const deleteLinks = document.querySelectorAll('.btn-danger');
  
    // Add an event listener to each delete link
    deleteLinks.forEach(deleteLink => {
      deleteLink.addEventListener('click', (event) => {
        // Prevent the default behavior of the link (e.g., navigating to another page)
        event.preventDefault();
  
        // Show a confirmation dialog
        const isConfirmed = window.confirm('Are you sure you want to delete?');
  
        // Check the user's choice
        if (isConfirmed) {
          // User clicked "OK" - perform delete action or any other logic here
          alert('Deleted!');
          // Redirect to the delete link's href (if needed)
          window.location.href = deleteLink.getAttribute('href');
        } else {
          // User clicked "Cancel" - do nothing or perform other actions
          alert('Cancelled delete.');
        }
      });
    });
  </script>

<script>
    document.getElementById('username').addEventListener('input', function () {
        var username = this.value;
        var usernameError = document.getElementById('usernameError');
        var formBlock = document.getElementById('formblock');

        // Check if the username is available as the user types
        checkUsernameAvailability(username, function (isAvailable) {
            if (!isAvailable) {
                usernameError.innerText = 'Username already taken ';
                // document.getElementById('submitBtn').disabled = true; // Disable the submit button
                formblock.addEventListener('submit',blockSubmit);
            } else {
                usernameError.innerText = '';
                // document.getElementById('submitBtn').disabled = false; // Disable the submit button
                formblock.removeEventListener('submit',blockSubmit);
            }
        });
    });


    function blockSubmit(event) {
        // Prevent form submission
        event.preventDefault();
    }

    function checkUsernameAvailability(username, callback) {
        // Make an AJAX request to your server to check if the username exists in MongoDB
        var xhr = new XMLHttpRequest();
        xhr.open('GET', '/checkUsernameAvailability?username=' + encodeURIComponent(username), true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
                var response = JSON.parse(xhr.responseText);
                callback(response.isAvailable);
            }
        };
        xhr.send();
    }
</script>
